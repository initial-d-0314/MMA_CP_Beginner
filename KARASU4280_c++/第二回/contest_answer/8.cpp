#include<bits/stdc++.h>
using namespace std;

int main (void){
  int n,sum = 0;
  string s[1010];
  int p[1010];

  cin >> n;
  for(int i = 0;i < n;i++){
    cin >> s[i] >> p[i];
    sum = sum + p[i];
  }

  for(int i = 0;i < n;i++){
    if(p[i]*2 > sum){
      cout << s[i] << '\n';
      return 0;
    }
  }

  cout << "atcoder\n";
  return 0;

  /*
  n個の町の名前と住人の数が入力されるので、それぞれを格納する配列を宣言します。
  そして、住民の数を全て足した後、それぞれの町の住民の数が合計の過半数を占めている町がないか確認します。
  もしあれば、新しい市の名前はその町の名前になります。なければ、atcoderとなります。

  今回は大丈夫でしたが、今後int型には収まりきらない数値を扱う時が来ます。
  その時に使えるデータ型を紹介します。
  long int型とlong long int型です。
  詳しいことはググっていただければ詳しくどれ位の大きさの整数がint型に収まるか説明してあります。
  この二つのデータ型はint型の拡張版なのでデータの扱い方はint型と変わりません。
  アルゴリズムが合っていても計算途中で数値がint型に収まりきらずに正しい結果が出力されないことはザラにあるので気をつけましょう。
  大きい数の乗算をしていて、なかなか正解にならないときは案外ここを見直すと解決するときもあります。
  */
}
